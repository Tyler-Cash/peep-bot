name: CI/CD

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'main'
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/ci.yml'
  pull_request:
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/ci.yml'

jobs:
  backend:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up lowercase owner
        run: echo "OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Set up Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew
        working-directory: ./backend

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build, create SBOM, and create container image
        id: build
        env:
          DEV_TYLERCASH_DISCORD_GUILD_ID: ${{ secrets.DEV_TYLERCASH_DISCORD_GUILD_ID }}
          DEV_TYLERCASH_DISCORD_TOKEN: ${{ secrets.DEV_TYLERCASH_DISCORD_TOKEN }}
          SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DISCORD_CLIENT_ID: ${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DISCORD_CLIENT_ID }}
          SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DISCORD_CLIENT_SECRET: ${{ secrets.SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_DISCORD_CLIENT_SECRET }}
        run: ./gradlew clean build bootBuildImage -Pspring.boot.build-image.imageName="ghcr.io/${{ env.OWNER_LOWERCASE }}/peep-bot-backend:latest" cyclonedxBom
        working-directory: ./backend

      - name: Scan SBOM with Grype
        id: grype
        uses: anchore/scan-action@v6
        with:
          sbom: backend/build/reports/application.cdx.json
          output-file: backend/grype-backend.sarif
          severity-cutoff: high
          fail-build: true

      - name: Manually correct SARIF paths
        if: always()
        run: |
          echo "Correcting paths in SARIF file..."
          SARIF_FILE="backend/grype-backend.sarif"
          TMP_SARIF_FILE="${SARIF_FILE}.tmp"
          jq '(.runs[].results[].locations[].physicalLocation.artifactLocation.uri |= "backend/" + .)' "$SARIF_FILE" > "$TMP_SARIF_FILE"
          mv "$TMP_SARIF_FILE" "$SARIF_FILE"
          echo "Path correction complete."

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: backend/grype-backend.sarif
          category: backend

      - name: Push Docker image to GHCR
        if: github.ref == 'refs/heads/main'
        run: docker push "ghcr.io/${{ env.OWNER_LOWERCASE }}/peep-bot-backend:latest"

  frontend:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up lowercase owner
        run: echo "OWNER_LOWERCASE=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Generate SBOM
        id: sbom
        uses: anchore/sbom-action@v0
        with:
          path: ./frontend
          format: cyclonedx-json
          output-file: frontend/sbom-frontend.cdx.json

      - name: Scan SBOM with Grype
        id: grype
        uses: anchore/scan-action@v6
        with:
          sbom: frontend/sbom-frontend.cdx.json
          output-file: frontend/grype-frontend.sarif
          source-root: ./frontend
          severity-cutoff: critical
          fail-build: true

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: frontend/grype-frontend.sarif
          category: frontend

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build . -t "ghcr.io/${{ env.OWNER_LOWERCASE }}/peep-bot-frontend:latest"
        working-directory: ./frontend

      - name: Push Docker image to GHCR
        if: github.ref == 'refs/heads/main'
        run: docker push "ghcr.io/${{ env.OWNER_LOWERCASE }}/peep-bot-frontend:latest"
        working-directory: ./frontend
